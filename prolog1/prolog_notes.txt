<filename>.pl

PROLOG example --> doesn't work

mother(judy,daenrys).
father(judy,harry).
mother(franc,daenrys).
father(franc,harry).
mother().

parent(X,Y):-
  mother(X,Y).
parent(X,Y):-
  father(X,Y).

ancestor(X,Y):-
  parent(X,Y).
ancestor(X,Y):-
  parents(X,Z),ancestor(Z,Y) // backwards

--------------------------------------

$ gprolog

?- consult(gengoldsmith).

?- mother(judy,X)

X = daenrys

$father(X,)

// something is wrong
// make edits

?- consult(gengoldsmith)

?- ancestor(X,Y)

// prints all solutions

----------------------------------------------------------------------------------------------------

nqueens(List,Solution):-    // passing an empty board -- called with nqueens([1,2,3,4],Solution)
                            // the list argument are the row numbers
  permutation(List,Solution),   // the solution is a permutation of L -- takes care of 1 queen per row & column
  nodiagconflicts(Solution),   // can't have diagonals

nodiagconflicts([],_). // base case -- _ = generic variable

nodiagconflicts([H|[H2|T]],Column_num):-   // H = (0,0)
  // H is H2-1, !, fail.
  H-1 is H2-Column_num, !, fail.

nodiagconflicts([H|[H2|T]],Column_num):-   // H = (0,0)
  H2 is H-1, !, fail.

nodiagconflicts([H|[H2|T]]):-   // H = (0,0)
  nodiagconflicts([H|T]),
  nodiagconflicts([H2|T]).


Example solution: perm = [2,4,1,3]

=\= --> not equal
